{"componentChunkName":"component---src-templates-blog-post-js","path":"/articles/听说你需要一个技术博客 - GatsbyJS 搭建/","result":{"data":{"markdownRemark":{"html":"<p>Gatsbyjs 官方的文档详细且通用，但是略显繁琐，现在针对搭建团队技术博客来写写怎么快速入门到完成部署</p>\n<p>如果想要自己学习使用建议从这里开始：<a href=\"https://www.gatsbyjs.cn/tutorial/part-zero/\">https://www.gatsbyjs.cn/tutorial/part-zero/</a></p>\n<h2>零、前置</h2>\n<p>前置环境：NodeJS（8.0.0+） 、Git、 Xcode 命令行工具（Mac）</p>\n<p>建议编辑器配置：VSCode + Prettier 插件 （参考：<a href=\"https://www.gatsbyjs.cn/tutorial/part-zero/#%E5%AE%89%E8%A3%85-prettier-%E6%8F%92%E4%BB%B6\">安装 Prettier 插件</a>）</p>\n<p>全局安装 Gatsby：<code>npm install -g gatsby-cli</code> 或者 <code>yarn global add gatsby-cli</code></p>\n<p>查 Gatsby 所支持的指令：<code>gatsby --help</code></p>\n<p>TodoList：</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 使用 GatsbyJSCLI 创建项目，并部署到 Github Page 上</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 创建数篇 Markdown 博文，成功读取并按照时间生成列表，点击进入可以阅读博文</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 优化样式: 使用主题</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 增加能力：\n<ul>\n<li>Lighthouse 检查 => PWA (mainfest &#x26; Service Worker)</li>\n<li>SEO</li>\n<li>增加 RSS 订阅</li>\n</ul>\n</li>\n</ul>\n<h2>一、弹射起步</h2>\n<h3>1. 创建项目</h3>\n<p>依次执行以下命令完成项目创建及本地运行：</p>\n<pre><code># 创建项目（hello 改为项目名）\ngatsby new hello https://github.com/gatsbyjs/gatsby-starter-hello-world\ncd hello\ngatsby develop # 运行本地服务器\n</code></pre>\n<p>运行后可以看到已经启动了网站 &#x26; 对应的 GraphQL 页面，不懂不要急，先继续走下去~</p>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6ab61d1953694ac7b41540b69b98e161~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p>如果想要增加页面，可以在 src/page 中直接添加文件，无需配置路由即可看到页面（可在 src 编码获得想要的效果）：</p>\n<p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/55c33d12120a4e40ad26baf1aab4e088~tplv-k3u1fbpfcp-watermark.image\" alt=\"截屏2021-07-23 上午10.07.08-side.png\"></p>\n<h3>2. 部署在 Github Page 上</h3>\n<h2>二、博客的优化</h2>\n<ul>\n<li>页面读取配置:\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Why: 通过 Graphql 查询：页面可以进行页面查询、非页面组件（例如 Layout）可以用 StaticQuery</li>\n<li>不通过 Graphql 查询：Gatsby without GraphQL</li>\n</ul>\n</li>\n</ul>\n<h3>0. 前置</h3>\n<p>准备两个 Markdown 文件加入 <code>src/articles</code> 目录，随便写点内容方便后续读取.</p>\n<p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/44a5f5af16b04078840b9819ea2a1d16~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<h3>1. 读取文件列表</h3>\n<p>想要实现 Markdown 博客站点，读取项目中文件是基础功能，现在按照官网的教程读取：</p>\n<p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3052ff7bcc9b42ebb34cba6222f2e4f7~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p>发现读取不到内容，再次阅读文档了解到需要安装\"文件系统源插件\"来从文件系统中获取数据.</p>\n<p>添加 gatsby-source-filesystem 插件：</p>\n<pre><code class=\"language-bash\">yarn add gatsby-source-filesystem\n</code></pre>\n<p>配置文件读取目录:</p>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/33b94d795a1c470ab45e3ef508a93734~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p>重启本地服务器（<code>yarn develop</code>）, 可以查找数据了：</p>\n<p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/59465a65c93b44f2bbe1d84cb02edc4c~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<h3>2. 展示 Markdown 文件列表</h3>\n<p>博客项目不需要展示 Markdown 文章之外的文件信息，且最好能够读取 Markdown 文件内部的时间、作者、Tag、简要内容用于列表展示.</p>\n<p>于是现在文章中补全一些文章相关信息：</p>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a7faaa0d0684409e8410157ba2bc0ea1~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p>想要做到读取文件内的数据，需要\"数据转换插件\"的支持, 对于 Markdown 文章可以使用 <code>gatsy-transformer-remark</code>:</p>\n<pre><code class=\"language-bash\">yarn add gatsby-transformer-remark\n</code></pre>\n<p>然后将其加入 <code>gatsby-config.js</code>:</p>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5507edaa84364b6c8c5578795267cced~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p>使用 <code>gatsy-transformer-remark</code> 带来的 <code>allMarkdownRemark</code> 获取到了文章信息</p>\n<p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8fa63c2d38564ac586047d4ae1fc0b87~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p>现在编辑 <code>index.js</code> 代码来展示对应的文章列表：</p>\n<pre><code class=\"language-js\">import { graphql } from 'gatsby'\nimport React from 'react'\nimport Layout from '../component/layout'\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(filter: {}) {\n      edges {\n        node {\n          id\n          frontmatter {\n            author\n            date\n            tag\n            title\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n\nconst Home = ({ data }) => (\n  &#x3C;Layout>\n    &#x3C;h1>文章列表&#x3C;/h1>\n    {data.allMarkdownRemark.edges.map(({ node }) => (\n      &#x3C;div key={node.id}>\n        &#x3C;h3>\n          {node.frontmatter.title}\n          {node.frontmatter.tag &#x26;&#x26; (\n            &#x3C;span\n              style={{\n                padding: '5px',\n                fontSize: '14px',\n                color: '#fff',\n                background: 'rgba(26, 189, 94, 0.8)',\n                borderRadius: '2px',\n                marginLeft: '5px',\n              }}\n            >\n              {node.frontmatter.tag}\n            &#x3C;/span>\n          )}\n        &#x3C;/h3>\n        &#x3C;p style={{ color: '#aaa' }}>\n          {node.frontmatter.date &#x26;&#x26; &#x3C;span style={{ marginRight: '10px' }}>{node.frontmatter.date}&#x3C;/span>}\n          {node.frontmatter.author &#x26;&#x26; &#x3C;span>{node.frontmatter.author}&#x3C;/span>}\n        &#x3C;/p>\n        &#x3C;p>{node.excerpt}&#x3C;/p>\n      &#x3C;/div>\n    ))}\n  &#x3C;/Layout>\n)\n\nexport default Home\n</code></pre>\n<p>效果如下所示：</p>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2343bffefd1e4d47bab9cd27b8ffb5b4~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<h3>3. 展示文章内容</h3>\n<p>现在有了文章列表，还需要生成文章链接 &#x26; 文章. 按照下面三步操作即可：</p>\n<p><strong>第一步</strong>：创建页面模板文件 <code>src/templates/blog-post.js</code></p>\n<pre><code class=\"language-js\">import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../component/layout'\n\nexport default ({ data }) => {\n  const post = data.markdownRemark\n  return (\n    &#x3C;Layout>\n      &#x3C;div>\n        &#x3C;h1>{post.frontmatter.title}&#x3C;/h1>\n        &#x3C;div dangerouslySetInnerHTML={{ __html: post.html }} />\n      &#x3C;/div>\n    &#x3C;/Layout>\n  )\n}\n\nexport const query = graphql`\n  query ($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n</code></pre>\n<p><strong>第二步</strong>：在根目录创建 <code>gatsby-node.js</code>文件用于存放路径和页面创建函数，它们将被 Gatsby 调用执行</p>\n<pre><code class=\"language-js\">// gatsby-node.js\nconst path = require(`path`)\nconst { createFilePath } = require(`gatsby-source-filesystem`)\n\n// 创建路径\nexports.onCreateNode = ({ node, getNode, actions }) => {\n  if (node.internal.type === `MarkdownRemark`) {\n    const { createNodeField } = actions\n    // 使用 gatsby-source-filesystem 插件提供的创建路径能力\n    const slug = createFilePath({ node, getNode, basePath: `pages` })\n    // 使用 createNodeField 向节点添加 slug 属性字段\n    createNodeField({\n      node,\n      name: `slug`,\n      value: slug,\n    })\n  }\n}\n\n// 创建页面\nexports.createPages = async ({ graphql, actions }) => {\n  const { createPage } = actions\n  const result = await graphql(`\n    query {\n      allMarkdownRemark {\n        edges {\n          node {\n            fields {\n              slug\n            }\n          }\n        }\n      }\n    }\n  `)\n  result.data.allMarkdownRemark.edges.forEach(({ node }) => {\n    createPage({\n      path: node.fields.slug,\n      component: path.resolve(`./src/templates/blog-post.js`),\n      context: {\n        slug: node.fields.slug,\n      },\n    })\n  })\n}\n</code></pre>\n<p><strong>第三步</strong>：为文章列表页添加路径查询及 Link 即可：</p>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bdcf4928e30f442789a3748fd48707ec~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>","frontmatter":{"title":"听说你需要一个技术博客 - GatsbyJS 搭建"}}},"pageContext":{"slug":"/articles/听说你需要一个技术博客 - GatsbyJS 搭建/"}},"staticQueryHashes":["3159585216"]}